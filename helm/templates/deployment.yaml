# -----------------------------------------------------------------------------
# Kubernetes Deployment definitions for the "smart" Helm chart.
#
# This template defines three deployments:
# 1. Frontend Deployment - Deploys the frontend app (e.g., React) on port 3000.
# 2. API Deployment - Deploys the backend service with model loading and secrets.
# 3. Postgres Deployment - Deploys a single-instance PostgreSQL database.
#
# All configurations use values from the Helm values.yaml file to support customization.
# -----------------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "smart.fullname" . }}-frontend
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "smart.name" . }}-frontend
  template:
    metadata:
      labels:
        app: {{ include "smart.name" . }}-frontend
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/frontend:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: production
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "smart.fullname" . }}-api
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "smart.name" . }}-api
  template:
    metadata:
      labels:
        app: {{ include "smart.name" . }}-api
    strategy:
      type: Recreate
    spec:
      initContainers:
        - name: fix-ollama-permissions
          image: busybox:1.36
          command: ["sh", "-c", "chown -R 1000:1000 /var/ollama"]
          volumeMounts:
            - name: models-storage
              mountPath: /var/ollama
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/api:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: smart-postgres
            - name: GOOGLE_CREDENTIALS_FILE
              value: /secrets/smart_input_key.json
            - name: FRONTEND_URL
              value: https://smart.ghundal.com
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 9000
          readinessProbe:
            httpGet:
              path: /health
              port: 9000
          resources:
            limits:
              cpu: 900m
              memory: 2800000Ki
            requests:
              cpu: 500m
              memory: 2Gi
          volumeMounts:
            - name: models-storage
              mountPath: /var/ollama
            - mountPath: /secrets
              name: smart-input-key-secret
              readOnly: true
      volumes:
        - name: models-storage
          persistentVolumeClaim:
            claimName: {{ include "smart.fullname" . }}-models-pvc
        - name: smart-input-key-secret
          secret:
            optional: false
            secretName: smart-input-key-secret
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "smart.fullname" . }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "smart.name" . }}-postgres
  template:
    metadata:
      labels:
        app: {{ include "smart.name" . }}-postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.image.repository }}/postgres:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: 5432
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "smart.fullname" . }}-postgres-secret
                  key: password
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ include "smart.fullname" . }}-postgres-pvc

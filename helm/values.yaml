# Default values for smart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: gcr.io/smart-452816
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/health-check-path: "/health"
    cloud.google.com/backend-config: '{"default": "api-backendconfig"}'
  hosts:
    - host: smart.ghundal.com
      paths:
        - path: /auth
          pathType: Prefix
          service: api
        - path: /api
          pathType: Prefix
          service: api
        - path: /
          pathType: Prefix
          service: frontend
  tls:
   - secretName: smart-tls-secret
     hosts:
       - smart.ghundal.com

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 3000
readinessProbe:
  httpGet:
    path: /
    port: 3000

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  database: smart
  username: postgres
  password: postgres
  storageSize: 8Gi

tls:
  enabled: true
  crt: |
    -----BEGIN CERTIFICATE-----
    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
    -----END CERTIFICATE-----

    -----BEGIN CERTIFICATE-----
    MIIFBjCCAu6gAwIBAgIRAIp9PhPWLzDvI4a9KQdrNPgwDQYJKoZIhvcNAQELBQAw
    TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
    cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjQwMzEzMDAwMDAw
    WhcNMjcwMzEyMjM1OTU5WjAzMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
    RW5jcnlwdDEMMAoGA1UEAxMDUjExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
    CgKCAQEAuoe8XBsAOcvKCs3UZxD5ATylTqVhyybKUvsVAbe5KPUoHu0nsyQYOWcJ
    DAjs4DqwO3cOvfPlOVRBDE6uQdaZdN5R2+97/1i9qLcT9t4x1fJyyXJqC4N0lZxG
    AGQUmfOx2SLZzaiSqhwmej/+71gFewiVgdtxD4774zEJuwm+UE1fj5F2PVqdnoPy
    6cRms+EGZkNIGIBloDcYmpuEMpexsr3E+BUAnSeI++JjF5ZsmydnS8TbKF5pwnnw
    SVzgJFDhxLyhBax7QG0AtMJBP6dYuC/FXJuluwme8f7rsIU5/agK70XEeOtlKsLP
    Xzze41xNG/cLJyuqC0J3U095ah2H2QIDAQABo4H4MIH1MA4GA1UdDwEB/wQEAwIB
    hjAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEwEgYDVR0TAQH/BAgwBgEB
    /wIBADAdBgNVHQ4EFgQUxc9GpOr0w8B6bJXELbBeki8m47kwHwYDVR0jBBgwFoAU
    ebRZ5nu25eQBc4AIiMgaWPbpm24wMgYIKwYBBQUHAQEEJjAkMCIGCCsGAQUFBzAC
    hhZodHRwOi8veDEuaS5sZW5jci5vcmcvMBMGA1UdIAQMMAowCAYGZ4EMAQIBMCcG
    A1UdHwQgMB4wHKAaoBiGFmh0dHA6Ly94MS5jLmxlbmNyLm9yZy8wDQYJKoZIhvcN
    AQELBQADggIBAE7iiV0KAxyQOND1H/lxXPjDj7I3iHpvsCUf7b632IYGjukJhM1y
    v4Hz/MrPU0jtvfZpQtSlET41yBOykh0FX+ou1Nj4ScOt9ZmWnO8m2OG0JAtIIE38
    01S0qcYhyOE2G/93ZCkXufBL713qzXnQv5C/viOykNpKqUgxdKlEC+Hi9i2DcaR1
    e9KUwQUZRhy5j/PEdEglKg3l9dtD4tuTm7kZtB8v32oOjzHTYw+7KdzdZiw/sBtn
    UfhBPORNuay4pJxmY/WrhSMdzFO2q3Gu3MUBcdo27goYKjL9CTF8j/Zz55yctUoV
    aneCWs/ajUX+HypkBTA+c8LGDLnWO2NKq0YD/pnARkAnYGPfUDoHR9gVSp/qRx+Z
    WghiDLZsMwhN1zjtSC0uBWiugF3vTNzYIEFfaPG7Ws3jDrAMMYebQ95JQ+HIBD/R
    PBuHRTBpqKlyDnkSHDHYPiNX3adPoPAcgdF3H2/W0rmoswMWgTlLn1Wu0mrks7/q
    pdWfS6PJ1jty80r2VKsM/Dj3YIDfbjXKdaFU5C+8bhfJGqU3taKauuz0wHVGT3eo
    6FlWkWYtbt4pgdamlwVeZEW+LM7qZEJEsMNPrfC03APKmZsJgpWCDWOKZvkZcvjV
    uYkQ4omYCTX5ohy+knMjdOmdH9c7SpqEWBDC86fiNex+O0XOMEZSa8DA
    -----END CERTIFICATE-----
  key: |
    -----BEGIN RSA PRIVATE KEY-----
    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
    -----END RSA PRIVATE KEY-----
